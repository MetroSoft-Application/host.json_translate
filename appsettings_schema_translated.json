{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "webOptimizer": {
      "title": "web optimizer",
      "type": "object",
      "description": "weboptimizer.coreの設定",
      "properties": {
        "enableCaching": {
          "description": "「キャッシュコントロール」HTTPヘッダーを設定するか、条件付きGET（304）リクエストをサポートする必要があるかどうかを判断します。これは、開発モード中に無効にするのに役立ちます。",
          "type": "boolean"
        },
        "enableTagHelperBundling": {
          "description": "`<script>`および `<link>`要素がバンドルされたパスを指すか、ソースファイルごとの参照を作成する必要があるかどうかを判断します。これは、開発モードのときに無効にするのに役立ちます。",
          "type": "boolean",
          "default": true
        }
      }
    },
    "cdn": {
      "title": "CDN",
      "type": "object",
      "description": "WebESSENTINALS.ASPNETCORE.CDNTAGHELPERSの定義",
      "properties": {
        "url": {
          "description": "静的リソースのプレフィックスとして使用される絶対URL",
          "type": "string",
          "pattern": "^((//|https?://).+|)$"
        },
        "prefetch": {
          "description": "trueの場合、dns解像度をcdnに高速化するa <link rel = 'dns-prefetch'>タグを注入します。",
          "type": "boolean",
          "default": true
        }
      }
    },
    "pwa": {
      "properties": {
        "cacheId": {
          "description": "サービスワーカーのキャッシュ識別子（任意の文字列にすることができます）。このプロパティを変更して、サービスワーカーにブラウザでリロードするように強制します。",
          "type": "string",
          "default": "v1.0"
        },
        "offlineRoute": {
          "description": "オフライン時に表示するページへのルート。",
          "type": "string",
          "default": "/offline.html"
        },
        "registerServiceWorker": {
          "description": "サービスワーカーを登録するスクリプトをHTMLページの下部に注入する必要があるかどうかを判断します。",
          "type": "boolean",
          "default": true
        },
        "registerWebmanifest": {
          "description": "Webマニフェストを指すメタタグをヘッド要素の端に挿入する必要があるかどうかを判断します。",
          "type": "boolean",
          "default": true
        },
        "routesToPreCache": {
          "description": "サービスワーカーがブラウザにインストールされたときに、キャッシュ前のルートのコンマ分離リスト。",
          "type": "string",
          "default": ""
        },
        "strategy": {
          "description": "事前定義されたサービスワーカータイプの1つを選択します。",
          "enum": [
            "cacheFirst",
            "cacheFirstSafe",
            "minimal",
            "networkFirst"
          ],
          "default": "cacheFirstSafe"
        }
      }
    },
    "ElmahIo": {
      "properties": {
        "ApiKey": {
          "description": "メッセージ付きのelmah.io apiキー|書き込み許可。",
          "type": "string",
          "pattern": "^([0-9a-f]{32})|(#\\{.*\\}#?)$"
        },
        "LogId": {
          "description": "メッセージを保存するためのelmah.ioのIDログ。",
          "type": "string",
          "pattern": "^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(#\\{.*\\}#?)$"
        },
        "Application": {
          "description": "すべてのエラーメッセージを表示するアプリケーション名。",
          "type": "string"
        },
        "HandledStatusCodesToLog": {
          "description": "例外がスローされていない場合でも、ログを記録するHTTPステータスコード（404以外）のリスト。",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "TreatLoggingAsBreadcrumbs": {
          "description": "microsoft.extensions.loggingからのログメッセージをパン粉として含めます。",
          "type": "boolean"
        },
        "HeartbeatId": {
          "description": "通知するElmah.io HeartbeatのID。",
          "type": "string",
          "pattern": "^([0-9a-f]{32})|(#\\{.*\\}#?)$"
        }
      },
      "required": [
        "ApiKey",
        "LogId"
      ]
    },
    "protocols": {
      "description": "エンドポイントでプロトコルが有効になっています。",
      "type": "string",
      "enum": [
        "None",
        "Http1",
        "Http2",
        "Http1AndHttp2",
        "Http3",
        "Http1AndHttp2AndHttp3"
      ]
    },
    "certificate": {
      "title": "certificate",
      "description": "証明書設定。",
      "type": "object",
      "properties": {
        "Path": {
          "description": "証明書ファイルパス。ファイルパスが指定されている場合、証明書はファイルシステムからロードされます。",
          "type": "string"
        },
        "KeyPath": {
          "description": "証明書キーファイルパス。.NET 5以降で利用可能。",
          "type": "string"
        },
        "Password": {
          "description": "秘密鍵にアクセスするために使用される証明書パスワード。",
          "type": "string"
        },
        "Subject": {
          "description": "証明書の件名。被験者が指定されている場合、証明書は証明書ストアからロードされます。",
          "type": "string"
        },
        "Store": {
          "description": "証明書ストア名。デフォルトは「私の」です。",
          "type": "string",
          "default": "My"
        },
        "Location": {
          "description": "証明書ストアの場所。デフォルトは「currentuser」になります。",
          "type": "string",
          "enum": [
            "LocalMachine",
            "CurrentUser"
          ],
          "default": "CurrentUser"
        },
        "AllowInvalid": {
          "description": "無効と見なされる証明書を読み込むかどうかを示す値。デフォルトはfalseになります。",
          "type": "boolean",
          "default": false
        }
      }
    },
    "sslProtocols": {
      "description": "許容SSLプロトコルを指定します。デフォルトは「なし」であり、オペレーティングシステムが使用するのに最適なプロトコルを選択し、安全でないプロトコルをブロックすることができます。アプリには特定の理由がない限り、このデフォルトを使用する必要があります。.NET 5以降で利用可能。",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "None",
          "Tls",
          "Tls11",
          "Tls12",
          "Tls13"
        ],
        "default": "None"
      }
    },
    "clientCertificateMode": {
      "description": "HTTPS接続のクライアント証明書要件を指定します。デフォルトは「nocertificate」になります。.NET 5以降で利用可能。",
      "type": "string",
      "enum": [
        "NoCertificate",
        "AllowCertificate",
        "RequireCertificate"
      ],
      "default": "NoCertificate"
    },
    "kestrel": {
      "title": "kestrel",
      "type": "object",
      "description": "ASP.NETコアケストレルサーバー構成。",
      "properties": {
        "Endpoints": {
          "title": "endpoints",
          "description": "ケストレルがネットワークリクエストのために耳を傾けるエンドポイント。各エンドポイントには、JSONプロパティ名で指定された名前があります。",
          "type": "object",
          "additionalProperties": {
            "title": "endpoint options",
            "description": "Kestrel Endpoint構成。",
            "type": "object",
            "properties": {
              "Url": {
                "description": "スキーム、ホスト名、およびポートエンドポイントが聞こえます。URLが必要です。",
                "type": "string",
                "format": "uri"
              },
              "Protocols": {
                "$ref": "#/definitions/protocols"
              },
              "SslProtocols": {
                "$ref": "#/definitions/sslProtocols"
              },
              "Certificate": {
                "$ref": "#/definitions/certificate"
              },
              "ClientCertificateMode": {
                "$ref": "#/definitions/clientCertificateMode"
              },
              "Sni": {
                "title": "SNI",
                "description": "サーバー名表示（SNI）構成。これにより、クライアント要求されたホスト名を証明書およびその他のTLS設定にマッピングすることができます。「*。」が付いたワイルドカード名とトップレベル「*」がサポートされています。.NET 5以降で利用可能。",
                "type": "object",
                "additionalProperties": {
                  "title": "SNI options",
                  "description": "エンドポイントSNI構成。",
                  "type": "object",
                  "properties": {
                    "Protocols": {
                      "$ref": "#/definitions/protocols"
                    },
                    "SslProtocols": {
                      "$ref": "#/definitions/sslProtocols"
                    },
                    "Certificate": {
                      "$ref": "#/definitions/certificate"
                    },
                    "ClientCertificateMode": {
                      "$ref": "#/definitions/clientCertificateMode"
                    }
                  }
                }
              }
            },
            "required": [
              "Url"
            ]
          }
        },
        "EndpointDefaults": {
          "title": "endpoint defaults",
          "description": "すべてのエンドポイントに適用されるデフォルトの構成。名前付きエンドポイント固有の構成はデフォルトをオーバーライドします。",
          "type": "object",
          "properties": {
            "Protocols": {
              "$ref": "#/definitions/protocols"
            },
            "SslProtocols": {
              "$ref": "#/definitions/sslProtocols"
            },
            "ClientCertificateMode": {
              "$ref": "#/definitions/clientCertificateMode"
            }
          }
        },
        "Certificates": {
          "title": "certificates",
          "description": "KestrelがHTTPSエンドポイントで使用する証明書。各証明書には、JSONプロパティ名で指定された名前があります。「デフォルト」証明書は、証明書を指定していないHTTPSエンドポイントによって使用されます。",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/certificate"
          }
        }
      }
    },
    "logLevelThreshold": {
      "description": "ログレベルのしきい値。",
      "type": "string",
      "enum": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ]
    },
    "logLevel": {
      "title": "logging level options",
      "description": "ログを作成するときに使用されるログレベルの構成。一致するログレベルを超えるログのみが有効になります。各ログレベルの構成には、JSONプロパティ名で指定されたカテゴリがあります。ログレベルの構成の詳細については、https：//docs.microsoft.com/aspnet/core/fundamentals/logging/#configure-loggingを参照してください。",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/logLevelThreshold"
      }
    },
    "logging": {
      "title": "logging options",
      "type": "object",
      "description": "microsoft.extensions.loggingの構成。",
      "properties": {
        "LogLevel": {
          "$ref": "#/definitions/logLevel"
        },
        "Console": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            },
            "FormatterName": {
              "description": "使用するログメッセージフォーマッタの名前。デフォルトは「単純」になります。",
              "type": "string",
              "default": "simple"
            },
            "FormatterOptions": {
              "title": "formatter options",
              "description": "ログメッセージフォーマッタオプション。設定されたフォーマッタに応じて、オプションで追加のプロパティを使用できます。Formatterは、FormatterNameで指定されています。",
              "type": "object",
              "properties": {
                "IncludeScopes": {
                  "description": "本当の場合はスコープを含めます。デフォルトはfalseになります。",
                  "type": "boolean",
                  "default": false
                },
                "TimestampFormat": {
                  "description": "ロギングメッセージのタイムスタンプをフォーマットするために使用されるフォーマット文字列。デフォルトはnullです。",
                  "type": "string"
                },
                "UseUtcTimestamp": {
                  "description": "ロギングメッセージのタイムスタンプにUTC TimeZoneを使用する必要があるかどうかを示しています。デフォルトはfalseになります。",
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "LogToStandardErrorThreshold": {
              "$ref": "#/definitions/logLevelThreshold",
              "description": "メッセージの最小レベルは、Console.Errorに書き込まれます。"
            }
          }
        },
        "EventSource": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "Debug": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "EventLog": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "ElmahIo": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "ElmahIoBreadcrumbs": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        }
      },
      "additionalProperties": {
        "title": "provider logging settings",
        "type": "object",
        "description": "プロバイダーのロギング構成。プロバイダー名は、構成のJSONプロパティ名と一致する必要があります。",
        "properties": {
          "LogLevel": {
            "$ref": "#/definitions/logLevel"
          }
        }
      }
    },
    "allowedHosts": {
      "description": "ASP.NETコアホストフィルタリングミドルウェア構成。許可されたホストは、ポート番号のないホスト名のセミコロン削除リストです。一致するホスト名のないリクエストは拒否されます。ホスト名には、「*」が付いている場合があります。ワイルドカード、または「*」を使用してすべてのホストを許可します。",
      "type": "string"
    },
    "connectionStrings": {
      "title": "connection string options",
      "description": "接続文字列構成。iconfiguration.getConnectionString（String）拡張法で接続文字列を取得します。",
      "type": "object",
      "additionalProperties": {
        "description": "接続文字列構成。各接続文字列には、JSONプロパティ名で指定された名前があります。",
        "type": "string"
      }
    },
    "NLog": {
      "title": "NLog options",
      "type": "object",
      "description": "nlog構成",
      "default": {},
      "properties": {
        "autoReload": {
          "type": "boolean",
          "description": "appsettings.jsonファイルが変更されたことを通知すると、nlog構成を自動的にリロードします。",
          "default": false
        },
        "throwConfigExceptions": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "構成エラーがある場合、例外をスローしますか？設定されていない場合は、この設定にはshrowexceptionsが使用されます。",
          "default": false
        },
        "throwExceptions": {
          "type": "boolean",
          "description": "エラーが発生したときに例外をスローします。単体テストのみと高度なトラブルシューティング用。",
          "default": false
        },
        "internalLogLevel": {
          "type": "string",
          "description": "内部ロガーの最小ログレベル。",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal",
            "Off"
          ],
          "default": "Off"
        },
        "internalLogFile": {
          "type": "string",
          "description": "指定されたFilepathに内部ログを書き込みます"
        },
        "internalLogToConsole": {
          "type": "boolean",
          "description": "内部ログをコンソールに書き込みます",
          "default": "false"
        },
        "internalLogToConsoleError": {
          "type": "boolean",
          "description": "エラーストリームで内部ログをコンソールに書き込みます",
          "default": "false"
        },
        "globalThreshold": {
          "type": "string",
          "description": "このしきい値以下のログイベントは記録されていません。",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal",
            "Off"
          ],
          "default": "Off"
        },
        "autoShutdown": {
          "type": "boolean",
          "description": "appdomain.unloadまたはappdomain.processexitで「logactory.shutdown」を自動的に呼び出します",
          "default": "true"
        },
        "extensions": {
          "type": "array",
          "description": "追加のターゲットとレイアウトにNLOG拡張機能パッケージをロードします",
          "default": [],
          "items": {
            "title": "extension",
            "type": "object",
            "description": "",
            "default": {},
            "properties": {
              "assembly": {
                "type": "string",
                "description": "NLOG拡張機能パッケージのアセンブリ名。"
              },
              "prefix": {
                "type": "string",
                "description": "アセンブリからロードされたすべてのタイプ名にプレフィックスを追加します",
                "default": ""
              },
              "assemblyFile": {
                "type": "string",
                "description": "NLOG拡張パッケージのアセンブリファイルへの絶対的なfilepath。",
                "default": ""
              }
            }
          }
        },
        "variables": {
          "title": "variables",
          "type": "object",
          "description": "変数のキー価値ペア",
          "propertyNames": {
            "pattern": "^[A-Za-z0-9_.-]+$"
          },
          "patternProperties": {
            ".*": {
              "type": [
                "number",
                "string",
                "boolean"
              ]
            }
          }
        },
        "targetDefaultWrapper": {
          "title": "default wrapper",
          "type": "object",
          "description": "このカスタムターゲットラッパーで定義されたすべてのターゲットをラップします。",
          "default": {},
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": ""
            }
          }
        },
        "targets": {
          "title": "targets",
          "type": "object",
          "description": "",
          "default": {},
          "properties": {
            "async": {
              "type": "boolean",
              "description": "Overflowactionを使用してAsyncWrapperを使用してすべての定義されたターゲットをラップして、パフォーマンスを向上させるために破棄します。"
            }
          }
        },
        "rules": {
          "oneOf": [
            {
              "type": "array",
              "description": "",
              "default": [],
              "items": {
                "$ref": "#/definitions/NLogRulesItem"
              }
            },
            {
              "title": "rules",
              "type": "object",
              "propertyNames": {
                "pattern": "^[0-9]+$"
              },
              "patternProperties": {
                ".*": {
                  "$ref": "#/definitions/NLogRulesItem"
                }
              }
            }
          ]
        }
      }
    },
    "NLogRulesItem": {
      "title": "NLog rule item",
      "type": "object",
      "description": "Logeventsを一致するロガーオブジェクトから指定されたターゲットにリダイレクトします",
      "default": {},
      "required": [
        "logger"
      ],
      "properties": {
        "logger": {
          "type": "string",
          "description": "ロガー名に基づいてロガーオブジェクトを一致させます。ワイルドカード文字（ '*'または '？'）を使用できます。"
        },
        "ruleName": {
          "type": "string",
          "description": "configuration.findrulebynameおよびconfiguration.removerulebynameでルール検索を許可するルール識別子。"
        },
        "level": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "levels": {
          "type": "string",
          "description": "このルールが一致するレベルのリストを分離しました。"
        },
        "minLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "maxLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "finalMinLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "writeTo": {
          "type": "string",
          "description": "ターゲットの名前または名前 - コンマで区切られています。ブラックホールにイベントを送信するためにこのプロパティを削除します。"
        },
        "final": {
          "type": "boolean",
          "description": "これが一致する場合、さらなるルールを無視します。",
          "default": false
        },
        "enabled": {
          "type": "boolean",
          "description": "",
          "default": true
        },
        "filters": {
          "oneOf": [
            {
              "type": "array",
              "description": "",
              "default": [],
              "items": {
                "title": "filter",
                "type": "object",
                "description": "",
                "default": {},
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": ""
                  },
                  "action": {
                    "type": "string",
                    "description": "結果アクションフィルターがLogeVentと一致するとき。",
                    "enum": [
                      "Neutral",
                      "Log",
                      "Ignore",
                      "LogFinal",
                      "IgnoreFinal"
                    ],
                    "default": "Neutral"
                  }
                }
              }
            },
            {
              "title": "filter",
              "type": "object",
              "description": "",
              "default": {}
            }
          ]
        },
        "filterDefaultAction": {
          "type": "string",
          "description": "フィルターが一致しない場合、デフォルトのアクション。",
          "enum": [
            "Neutral",
            "Log",
            "Ignore",
            "LogFinal",
            "IgnoreFinal"
          ],
          "default": "Ignore"
        }
      }
    },
    "Serilog": {
      "type": "object",
      "title": "Serilog appSettings",
      "description": "Serilog Appsettings構成",
      "properties": {
        "$schema": {
          "type": "string",
          "title": "Schema",
          "description": "このドキュメントを検証すべきスキーマへのポインタ。"
        },
        "Using": {
          "type": "array",
          "title": "List of Auto-discovery of configuration assemblies",
          "description": "セクションの使用には、構成方法があるアセンブリのリストが含まれています。プロジェクトの種類に応じて必要な場合があります：https：//github.com/serilog/serilog-settings-configuration#using-section-and-auto-discovery-of-configuration-assemblies",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Serilog/definitions/AssemblyReference"
          }
        },
        "LevelSwitches": {
          "type": "object",
          "patternProperties": {
            "^(?<SerilogLevelSwitcherName>\\${0,1}[A-Za-z]+[A-Za-z0-9]*)$": {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            }
          },
          "additionalProperties": false
        },
        "FilterSwitches": {
          "type": "object",
          "patternProperties": {
            "^(?<SerilogLevelSwitcherName>\\${0,1}[A-Za-z]+[A-Za-z0-9]*)$": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "MinimumLevel": {
          "type": [
            "string",
            "object"
          ],
          "title": "Minimum LogLevel Threshold",
          "description": "最小ログレベルのしきい値。（基礎となるiconfigurationProviderがサポートしている場合、動的リロードをサポート）",
          "oneOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/DetailedMinimumLevel"
            }
          ]
        },
        "Properties": {
          "type": "object",
          "title": "Log events Properties",
          "description": "このセクションでは、ログイベントを濃縮するキー価値ペアの静的リストを定義します。",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Enrich": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events Enriches",
          "description": "このセクションでは、ログイベントに適用される濃縮を定義します。"
        },
        "Destructure": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events Destructure",
          "description": "このセクションでは、破壊を定義します。"
        },
        "Filter": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events filters",
          "description": "このセクションでは、ログイベントに適用されるフィルターを定義します。"
        },
        "WriteTo": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Configuration for log destination",
          "description": "このセクションでは、ログイベントが放出されるシンクを構成します。"
        },
        "AuditTo": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Configuration for log destination for auditing",
          "description": "このセクションでは、通常の（安全な）ログの代わりに、監査用のシンクを構成します。OBS：監査を使用する場合、シンクと中間フィルターからの例外が発信者に伝播します。"
        }
      },
      "patternProperties": {
        "^Enrich:((?<EnvironmentVariableName>[a-zA-Z_]\\w*)|(?<ArrayIndex>\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events Enriches",
          "description": "このセクションでは、ログイベントに適用される濃縮を定義します。"
        },
        "^Destructure:((?<EnvironmentVariableName>[a-zA-Z_]\\w*)|(?<ArrayIndex>\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events Destructure",
          "description": "このセクションでは、破壊を定義します。"
        },
        "^Filter:((?<EnvironmentVariableName>[a-zA-Z_]\\w*)|(?<ArrayIndex>\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events filters",
          "description": "このセクションでは、ログイベントに適用されるフィルターを定義します。"
        },
        "^WriteTo:((?<EnvironmentVariableName>[a-zA-Z_]\\w*)|(?<ArrayIndex>\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Configuration for log destination",
          "description": "このセクションでは、ログイベントが放出されるシンクを構成します。"
        },
        "^AuditTo:((?<EnvironmentVariableName>[a-zA-Z_]\\w*)|(?<ArrayIndex>\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Configuration for log destination for auditing",
          "description": "このセクションでは、通常の（安全な）ログの代わりに、監査用のシンクを構成します。OBS：監査を使用する場合、シンクと中間フィルターからの例外が発信者に伝播します。"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "SerilogLogEventLevel": {
          "type": "string",
          "title": "Log level",
          "description": "ログレベルのしきい値。",
          "enum": [
            "Verbose",
            "Debug",
            "Information",
            "Warning",
            "Error",
            "Fatal"
          ]
        },
        "LoggingLevelSwitch": {
          "type": "string",
          "title": "LevelSwitches name",
          "description": "ログレベルのスイッチ文字列参照。",
          "pattern": "^(?<SerilogLevelSwitcherName>\\${0,1}[A-Za-z]+[A-Za-z0-9]*)$"
        },
        "SerilogLogLevelThreshold": {
          "type": "string",
          "title": "Log Level or LevelSwitches name",
          "description": "セリログログレベルまたは「レベルスイッチ」構成のログレベルスイッチ名への参照。",
          "anyOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/LoggingLevelSwitch"
            }
          ]
        },
        "DetailedMinimumLevel": {
          "type": "object",
          "title": "Detailed Log level.",
          "description": "詳細なログレベルのしきい値オブジェクト。ロギングソースごとに、設定されたログレベルをオーバーライドできます。",
          "properties": {
            "Default": {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogLevelThreshold"
            },
            "ControlledBy": {
              "$ref": "#/definitions/Serilog/definitions/LoggingLevelSwitch"
            },
            "Override": {
              "type": "object",
              "title": "Logging Source Log level object.",
              "description": "ロギングソースごとに、ログレベルのしきい値またはレベルスイッチャー参照を設定します。",
              "additionalProperties": {
                "$ref": "#/definitions/Serilog/definitions/SerilogLogLevelThreshold"
              }
            }
          },
          "additionalProperties": false
        },
        "AssemblyReference": {
          "type": "string",
          "title": "Assembly Name",
          "description": ".NETアセンブリ名、ファイル拡張機能なし",
          "minLength": 1,
          "pattern": "^(?<AssemblyName>\\S+)$"
        },
        "ComplexMethodCallReference": {
          "type": "object",
          "properties": {
            "Name": {
              "$ref": "#/definitions/Serilog/definitions/CSharpMethodName"
            },
            "Args": {
              "type": "object",
              "patternProperties": {
                "^(?<CSharpMethodArgumentName>[a-zA-Z_]\\w*)$": {}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "required": [
            "Name"
          ]
        },
        "MethodCallReferenceItem": {
          "type": [
            "string",
            "object",
            "null"
          ],
          "oneOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/CSharpMethodName"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/ComplexMethodCallReference"
            }
          ]
        },
        "MethodCallReference": {
          "type": [
            "array",
            "string",
            "object"
          ],
          "minLength": 1,
          "pattern": "^(?<CSharpMethodName>[a-zA-Z_]\\w*)$",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
          },
          "additionalProperties": {
            "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
          }
        },
        "CSharpMethodName": {
          "type": "string",
          "title": "Method Name",
          "description": "C＃クラスメソッドを参照する名前",
          "minLength": 1,
          "pattern": "^(?<CSharpMethodName>[a-zA-Z_]\\w*)$"
        },
        "CSharpMethodArgumentName": {
          "type": "string",
          "title": "Argument Name",
          "description": "C＃クラスメソッド引数を指す名前",
          "minLength": 1,
          "pattern": "^(?<CSharpMethodArgumentName>[a-zA-Z_]\\w*)$"
        },
        "EnvironmentVariableName": {
          "type": "string",
          "title": "Environment Variable Name",
          "description": "OS環境変数を指す名前",
          "minLength": 1,
          "pattern": "^(?<EnvironmentVariableName>[a-zA-Z_]\\w*)$"
        },
        "SerilogLevelSwitcherName": {
          "type": "string",
          "title": "A Level Switcher Name",
          "description": "Serilog設定構成レベルスイッチャーを参照する名前",
          "minLength": 1,
          "pattern": "^(?<SerilogLevelSwitcherName>\\${0,1}[A-Za-z]+[A-Za-z0-9]*)$"
        }
      }
    }
  },
  "id": "https://json.schemastore.org/appsettings.json",
  "patternProperties": {
    "^WebOptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^webOptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^weboptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^(cdn|Cdn)$": {
      "$ref": "#/definitions/cdn"
    },
    "^(pwa|PWA|Pwa)$": {
      "$ref": "#/definitions/pwa"
    },
    "^(ElmahIo|Elmahio|elmahIo|elmahio)$": {
      "$ref": "#/definitions/ElmahIo"
    },
    "^(nlog|Nlog|NLog)$": {
      "$ref": "#/definitions/NLog"
    },
    "^(Serilog|serilog)$": {
      "$ref": "#/definitions/Serilog"
    }
  },
  "properties": {
    "Kestrel": {
      "$ref": "#/definitions/kestrel"
    },
    "Logging": {
      "$ref": "#/definitions/logging"
    },
    "AllowedHosts": {
      "$ref": "#/definitions/allowedHosts"
    },
    "ConnectionStrings": {
      "$ref": "#/definitions/connectionStrings"
    }
  },
  "title": "JSON schema ASP.NET Core's appsettings.json file",
  "type": "object"
}